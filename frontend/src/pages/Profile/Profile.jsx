import { useState } from "react";
import "./Profile.css";
import { useAuth } from "../../hooks/useAuth";
import { useAchievements } from "../../hooks/useAchievements";


const formatDate = (dateString) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('ru-RU', 
    {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric',
    // hour: '2-digit',
    // minute: '2-digit'
  });
};



export default function Profile() {
  const { user, logout } = useAuth();
  const { CreateAchievement, isAdding } = useAchievements();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º—ã
  const [newAchievement, setNewAchievement] = useState("");
  const [error, setError] = useState("");

  const handleAddAchievement = async (e) => {
    e.preventDefault();

    if (!newAchievement.trim()) {
      setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ");
      return;
    }

    CreateAchievement(newAchievement);
  };

  return (
    <div className="fullscreenProfile">
      {/* –®–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è (–Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É) */}
      <div className="profileBanner">
        <div className="bannerContent">
          <div className="avatar">üç™</div>
          <h1>{user.login}</h1>
          <button onClick={logout}>–í—ã–π—Ç–∏</button>

          <div className="stats">
            <div className="stat">
              <span className="statNumber">{user.cookies}</span>
              <span className="statLabel">–ü–µ—á–µ–Ω–µ–∫</span>
            </div>
            <div className="stat">
              <span className="statNumber">{user.achievements.length}</span>
              <span className="statLabel">–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π</span>
            </div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É) */}
      <div className="profileContent">
        <div className="contentWrapper">
          {/* –°–µ–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
          <div className="addAchievementSection">
            <h2 className="sectionTitle">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ</h2>
            <form
              onSubmit={handleAddAchievement}
              className="addAchievementForm"
            >
              <div className="formRow">
                <textarea
                  value={newAchievement}
                  onChange={(e) => {
                    setNewAchievement(e.target.value);
                    setError("");
                  }}
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ..."
                  className="achievementInput"
                  disabled={isAdding}
                  rows="3"
                />
                <button
                  type="submit"
                  className="addButton"
                  disabled={isAdding || !newAchievement.trim()}
                >
                  {isAdding ? "–î–æ–±–∞–≤–ª—è–µ–º..." : "–î–æ–±–∞–≤–∏—Ç—å"}
                </button>
              </div>
              {error && <div className="errorMessage">{error}</div>}
            </form>
          </div>

          {/* –°–µ–∫—Ü–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π */}
          <div className="achievementsSection">
            <div className="achievementsHeader">
              <h2>–ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
            </div>
            <div className="achievementsContainer">
              {user.achievements.length > 0 ? (
                user.achievements.map((achievement) => (
                  <div key={achievement.id} className="achievementTile">
                    <div className="achievementEmoji">üèÜ</div>
                    <div className="achievementText">
                      <h3>{achievement.description}</h3>
                      <p>–ü–æ–ª—É—á–µ–Ω–æ {achievement.cookie_count} –ø–µ—á–µ–Ω–µ–∫</p>
                    </div>
                  </div>
                ))
              ) : (
                <p className="noAchievements">–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</p>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
