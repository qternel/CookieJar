import { useEffect, useState } from "react"; // TODO: –î–æ–±–∞–≤–∏—Ç—å axios –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –±—ç–∫–µ–Ω–¥–∞
import "./Profile.css";

export default function Profile() {
  // TODO: –ó–∞–º–µ–Ω–∏—Ç—å –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫–µ–Ω–¥—É
  const [profileData, setProfileData] = useState({
    login: "CookieMaster",
    cookies: 127,
    joinDate: "2025-05-20T14:30:00Z", // TODO: –ü–æ–ª—É—á–∞—Ç—å —Å –±—ç–∫–µ–Ω–¥–∞
    achievements: [] // TODO: –ü–æ–ª—É—á–∞—Ç—å —Å –±—ç–∫–µ–Ω–¥–∞
  });

  // TODO: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –±—ç–∫–µ–Ω–¥–∞
  /*
  useEffect(() => {
    const fetchProfile = async () => {
      try {
        const response = await axios.get('/api/profile', { 
          withCredentials: true 
        });
        setProfileData(response.data);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
      }
    };
    
    fetchProfile();
  }, []);
  */

  return (
    <div className="fullscreenProfile">
      {/* –®–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è */}
      <div className="profileBanner">
        <div className="bannerContent">
          <div className="avatar">üç™</div>
          <h1>{profileData.login}</h1>
          
          <div className="profileMeta">
            <p>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {new Date(profileData.joinDate).toLocaleDateString()}</p>
          </div>

          <div className="stats">
            <div className="stat">
              <span className="statNumber">{profileData.cookies}</span>
              <span className="statLabel">–ü–µ—á–µ–Ω–µ–∫</span>
            </div>
            <div className="stat">
              <span className="statNumber">{profileData.achievements.length}</span>
              <span className="statLabel">–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π</span>
            </div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="fullWidthContent">
        <h2>–ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
        <div className="achievementsContainer">
          {profileData.achievements.length > 0 ? (
            profileData.achievements.map((achievement, i) => (
              <div key={i} className="achievementTile">
                <div className="achievementEmoji">üèÜ</div>
                <div className="achievementText">
                  <h3>{achievement.description}</h3>
                  <p>–ü–æ–ª—É—á–µ–Ω–æ: {achievement.date}</p>
                </div>
              </div>
            ))
          ) : (
            <p className="noAchievements">–ù–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</p>
          )}
        </div>
      </div>
    </div>
  );
}