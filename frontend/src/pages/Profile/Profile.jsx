import { useState } from "react";
import "./Profile.css";

export default function Profile() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
  const [profileData, setProfileData] = useState({
    login: "CookieMaster",
    cookies: 127,
    joinDate: "2025-05-20T14:30:00Z",
    achievements: [
      { id: 1, description: "–ü–µ—Ä–≤–∞—è –ø–µ—á–µ–Ω—å–∫–∞", date: "2025-05-21" },
      { id: 2, description: "–ù–µ–¥–µ–ª—å–Ω—ã–π streak", date: "2025-05-28" }
    ]
  });

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º—ã
  const [newAchievement, setNewAchievement] = useState("");
  const [isAdding, setIsAdding] = useState(false);
  const [error, setError] = useState("");

  const handleAddAchievement = async (e) => {
    e.preventDefault();
    
    if (!newAchievement.trim()) {
      setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ");
      return;
    }

    setIsAdding(true);
    
    try {
      // TODO: –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫–µ–Ω–¥—É
      console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:", { description: newAchievement });
      
      // –ú–æ–∫–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (—É–¥–∞–ª–∏—Ç—å –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –±—ç–∫–µ–Ω–¥–∞)
      await new Promise(resolve => setTimeout(resolve, 800));
      
      const newAchievementObj = {
        id: Date.now(),
        description: newAchievement,
        date: new Date().toLocaleDateString()
      };
      
      setProfileData(prev => ({
        ...prev,
        achievements: [newAchievementObj, ...prev.achievements]
      }));
      
      setNewAchievement("");
      setError("");
    } catch (err) {
      setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏");
      console.error(err);
    } finally {
      setIsAdding(false);
    }
  };

  return (
    <div className="fullscreenProfile">
      {/* –®–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è (–Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É) */}
      <div className="profileBanner">
        <div className="bannerContent">
          <div className="avatar">üç™</div>
          <h1>{profileData.login}</h1>
          
          <div className="profileMeta">
            <p>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {new Date(profileData.joinDate).toLocaleDateString()}</p>
          </div>

          <div className="stats">
            <div className="stat">
              <span className="statNumber">{profileData.cookies}</span>
              <span className="statLabel">–ü–µ—á–µ–Ω–µ–∫</span>
            </div>
            <div className="stat">
              <span className="statNumber">{profileData.achievements.length}</span>
              <span className="statLabel">–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π</span>
            </div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É) */}
      <div className="profileContent">
        <div className="contentWrapper">
          {/* –°–µ–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
          <div className="addAchievementSection">
            <h2 className="sectionTitle">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ</h2>
            <form onSubmit={handleAddAchievement} className="addAchievementForm">
              <div className="formRow">
                <textarea
                  value={newAchievement}
                  onChange={(e) => {
                    setNewAchievement(e.target.value);
                    setError("");
                  }}
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ..."
                  className="achievementInput"
                  disabled={isAdding}
                  rows="3"
                />
                <button 
                  type="submit" 
                  className="addButton"
                  disabled={isAdding || !newAchievement.trim()}
                >
                  {isAdding ? "–î–æ–±–∞–≤–ª—è–µ–º..." : "–î–æ–±–∞–≤–∏—Ç—å"}
                </button>
              </div>
              {error && <div className="errorMessage">{error}</div>}
            </form>
          </div>

          {/* –°–µ–∫—Ü–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π */}
          <div className="achievementsSection">
            <div className="achievementsHeader">
              <h2>–ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
            </div>
            <div className="achievementsContainer">
              {profileData.achievements.length > 0 ? (
                profileData.achievements.map((achievement) => (
                  <div key={achievement.id} className="achievementTile">
                    <div className="achievementEmoji">üèÜ</div>
                    <div className="achievementText">
                      <h3>{achievement.description}</h3>
                      <p>–ü–æ–ª—É—á–µ–Ω–æ: {achievement.date}</p>
                    </div>
                  </div>
                ))
              ) : (
                <p className="noAchievements">–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</p>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}